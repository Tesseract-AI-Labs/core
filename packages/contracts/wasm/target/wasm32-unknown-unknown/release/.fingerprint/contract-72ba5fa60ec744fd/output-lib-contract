{"message":"unused doc comment","code":{"code":"unused_doc_comments","explanation":null},"level":"warning","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/patient_state.rs","byte_start":0,"byte_end":37,"line_start":1,"line_end":1,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"/// MultiversX Smart Contract Imports","highlight_start":1,"highlight_end":38}],"label":"rustdoc does not generate documentation for macro invocations","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to document an item produced by a macro, the macro must produce the documentation as part of its expansion","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_doc_comments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused doc comment\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/patient_state.rs:1:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// MultiversX Smart Contract Imports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mrustdoc does not generate documentation for macro invocations\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_doc_comments)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `timestamp`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":1914,"byte_end":1923,"line_start":61,"line_end":61,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let timestamp = self.blockchain().get_block_timestamp();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":1914,"byte_end":1923,"line_start":61,"line_end":61,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let timestamp = self.blockchain().get_block_timestamp();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"_timestamp","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `timestamp`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs:61:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let timestamp = self.blockchain().get_block_timestamp();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_timestamp`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":7068,"byte_end":7070,"line_start":194,"line_end":194,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        id: ManagedByteArray<32>,","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":7068,"byte_end":7070,"line_start":194,"line_end":194,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        id: ManagedByteArray<32>,","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":"_id","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `id`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs:194:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        id: ManagedByteArray<32>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_id`\u001b[0m\n\n"}
{"message":"unused variable: `timestamp`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":7102,"byte_end":7111,"line_start":195,"line_end":195,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        timestamp: u64,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":7102,"byte_end":7111,"line_start":195,"line_end":195,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        timestamp: u64,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"_timestamp","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `timestamp`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs:195:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        timestamp: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_timestamp`\u001b[0m\n\n"}
{"message":"unused variable: `permission`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":8691,"byte_end":8701,"line_start":245,"line_end":245,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        permission: PermissionType","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":8691,"byte_end":8701,"line_start":245,"line_end":245,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        permission: PermissionType","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"_permission","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `permission`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs:245:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        permission: PermissionType\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_permission`\u001b[0m\n\n"}
{"message":"constant `INVALID_ADDRESS` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/constants.rs","byte_start":10,"byte_end":25,"line_start":1,"line_end":1,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const INVALID_ADDRESS: &[u8] = b\"invalid address\";","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `INVALID_ADDRESS` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/constants.rs:1:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const INVALID_ADDRESS: &[u8] = b\"invalid address\";\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"variable `newPatient` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":2013,"byte_end":2023,"line_start":65,"line_end":65,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        let newPatient = PatientInfo{","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":2013,"byte_end":2023,"line_start":65,"line_end":65,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        let newPatient = PatientInfo{","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":"new_patient","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newPatient` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs:65:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let newPatient = PatientInfo{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_patient`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `newTicket` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":4116,"byte_end":4125,"line_start":117,"line_end":117,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let newTicket = Ticket{","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":4116,"byte_end":4125,"line_start":117,"line_end":117,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let newTicket = Ticket{","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"new_ticket","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newTicket` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs:117:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let newTicket = Ticket{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_ticket`\u001b[0m\n\n"}
{"message":"variable `newModel` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":6019,"byte_end":6027,"line_start":169,"line_end":169,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let newModel = Model{","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":6019,"byte_end":6027,"line_start":169,"line_end":169,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let newModel = Model{","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"new_model","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newModel` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs:169:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let newModel = Model{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_model`\u001b[0m\n\n"}
{"message":"variable `newMetrics` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":7325,"byte_end":7335,"line_start":204,"line_end":204,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        let newMetrics = Metrics{","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":7325,"byte_end":7335,"line_start":204,"line_end":204,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        let newMetrics = Metrics{","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":"new_metrics","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newMetrics` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs:204:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let newMetrics = Metrics{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_metrics`\u001b[0m\n\n"}
{"message":"trait method `getSeed` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":9461,"byte_end":9468,"line_start":273,"line_end":273,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn getSeed(&self) -> u32 {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs","byte_start":9461,"byte_end":9468,"line_start":273,"line_end":273,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn getSeed(&self) -> u32 {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"get_seed","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait method `getSeed` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/akan/dev/hackathon/tesseract-ai/core/packages/contracts/src/core.rs:273:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn getSeed(&self) -> u32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_seed`\u001b[0m\n\n"}
{"message":"11 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 11 warnings emitted\u001b[0m\n\n"}
